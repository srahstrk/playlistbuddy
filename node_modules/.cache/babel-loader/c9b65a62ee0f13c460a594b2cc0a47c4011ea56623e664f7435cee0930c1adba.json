{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/React/jammming/jammming/src/components/Searchresults.js\";\nimport Searchbar from './Searchbar';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"./spotifyAuth\";\nimport { fetchSpotifyData } from \"./spotifyApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getPlaylistDetails(playlistId) {\n  const clientId = \"your-client-id\"; // Replace with your Spotify Client ID\n  const clientSecret = \"your-client-secret\"; // Replace with your Spotify Client Secret\n\n  try {\n    // Step 1: Get the token\n    const token = await getSpotifyToken(clientId, clientSecret);\n\n    // Step 2: Use the token to fetch playlist details\n    const playlistData = await fetchSpotifyData(`/playlists/${playlistId}`, token);\n    console.log(\"Playlist Details:\", playlistData);\n  } catch (error) {\n    console.error(\"Error fetching playlist details:\", error);\n  }\n}\ngetPlaylistDetails(\"37i9dQZF1DXcBWIGoYBM5M\"); // Example playlist ID\n\nconst Searchresults = async () => {\n  const searchEndPoint = 'https://api.spotify.com/v1/search';\n  const searchQuery = 'Civic';\n  const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track`;\n  try {\n    const response = await fetch(urlToFetch);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const songs = jsonResponse.response;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(songs)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = Searchresults;\nexport default Searchresults;\nvar _c;\n$RefreshReg$(_c, \"Searchresults\");","map":{"version":3,"names":["Searchbar","React","useState","useEffect","getSpotifyToken","fetchSpotifyData","jsxDEV","_jsxDEV","getPlaylistDetails","playlistId","clientId","clientSecret","token","playlistData","console","log","error","Searchresults","searchEndPoint","searchQuery","urlToFetch","response","fetch","ok","jsonResponse","json","songs","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Projects/React/jammming/jammming/src/components/Searchresults.js"],"sourcesContent":["import Searchbar from './Searchbar';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"./spotifyAuth\";\nimport { fetchSpotifyData } from \"./spotifyApi\";\n\nasync function getPlaylistDetails(playlistId) {\n  const clientId = \"your-client-id\"; // Replace with your Spotify Client ID\n  const clientSecret = \"your-client-secret\"; // Replace with your Spotify Client Secret\n\n  try {\n    // Step 1: Get the token\n    const token = await getSpotifyToken(clientId, clientSecret);\n\n    // Step 2: Use the token to fetch playlist details\n    const playlistData = await fetchSpotifyData(`/playlists/${playlistId}`, token);\n\n    console.log(\"Playlist Details:\", playlistData);\n  } catch (error) {\n    console.error(\"Error fetching playlist details:\", error);\n  }\n}\n\ngetPlaylistDetails(\"37i9dQZF1DXcBWIGoYBM5M\"); // Example playlist ID\n\n\n\n\nconst Searchresults = async () => {    \n const searchEndPoint = 'https://api.spotify.com/v1/search'; \n const searchQuery = 'Civic';\n const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track`; \n try {\n     const response = await fetch(urlToFetch);\n     if (response.ok) {\n       const jsonResponse = await response.json();\n       const songs = jsonResponse.response;\n       return (\n        <div>\n        {JSON.stringify(songs)}\n      </div>\n       )\n     }\n  } catch (error) {\n    console.log(error);\n  }  \n } \n\n\nexport default Searchresults"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAeC,kBAAkBA,CAACC,UAAU,EAAE;EAC5C,MAAMC,QAAQ,GAAG,gBAAgB,CAAC,CAAC;EACnC,MAAMC,YAAY,GAAG,oBAAoB,CAAC,CAAC;;EAE3C,IAAI;IACF;IACA,MAAMC,KAAK,GAAG,MAAMR,eAAe,CAACM,QAAQ,EAAEC,YAAY,CAAC;;IAE3D;IACA,MAAME,YAAY,GAAG,MAAMR,gBAAgB,CAAC,cAAcI,UAAU,EAAE,EAAEG,KAAK,CAAC;IAE9EE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,YAAY,CAAC;EAChD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D;AACF;AAEAR,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAK9C,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,cAAc,GAAG,mCAAmC;EAC1D,MAAMC,WAAW,GAAG,OAAO;EAC3B,MAAMC,UAAU,GAAG,GAAGF,cAAc,MAAMC,WAAW,aAAa;EAClE,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAU,CAAC;IACxC,IAAIC,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1C,MAAMC,KAAK,GAAGF,YAAY,CAACH,QAAQ;MACnC,oBACCd,OAAA;QAAAoB,QAAA,EACCC,IAAI,CAACC,SAAS,CAACH,KAAK;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAEP;EACH,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB;AACD,CAAC;AAAAkB,EAAA,GAlBIjB,aAAa;AAqBnB,eAAeA,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}