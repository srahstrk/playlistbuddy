{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/React/jammming/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"./spotifyAuth\";\nimport { fetchSpotifyData } from \"./spotifyApi\";\nimport Header from './components/Header';\nimport Searchbar from './components/Searchbar';\nimport Searchresult from './components/Searchresults';\nimport Playlist from './components/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const clientId = \"1840d8c49ff1481c8748e3e4188f320f\";\n  const clientSecret = \"c81dfd43be3746b894a59a9956a1247e\";\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!searchQuery) return;\n      try {\n        var _fetchedSearchData$tr;\n        // Step 1: Get Spotify API Token\n        const token = await getSpotifyToken(clientId, clientSecret);\n        // Step 2: Fetch data from Spotify API\n        const fetchedSearchData = await fetchSpotifyData(`/search?q=${searchQuery}&type=track`, token);\n        const fetchedUserData = fetchSpotifyData(`/me/playlists`, token);\n        const tracks = ((_fetchedSearchData$tr = fetchedSearchData.tracks) === null || _fetchedSearchData$tr === void 0 ? void 0 : _fetchedSearchData$tr.items) || [];\n        // Step 3: Update state with the fetched data\n        setSearchResults(tracks); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching Spotify data:\", error);\n      }\n    };\n    fetchData(); // Call the async function\n  }, [searchQuery]); // \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Searchresult, {\n        tracks: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"okIwvr2vAQbiEXKfBcmg5USEwD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getSpotifyToken","fetchSpotifyData","Header","Searchbar","Searchresult","Playlist","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","clientId","clientSecret","handleSearch","query","fetchData","_fetchedSearchData$tr","token","fetchedSearchData","fetchedUserData","tracks","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","className","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Projects/React/jammming/jammming/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"./spotifyAuth\";\nimport { fetchSpotifyData } from \"./spotifyApi\";\nimport Header from './components/Header';\nimport Searchbar from './components/Searchbar';\nimport Searchresult from './components/Searchresults';\nimport Playlist from './components/Playlist';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\nconst [searchResults, setSearchResults] = useState([]);\nconst clientId = \"1840d8c49ff1481c8748e3e4188f320f\"; \nconst clientSecret = \"c81dfd43be3746b894a59a9956a1247e\"; \n\nconst handleSearch = (query) => {\n  setSearchQuery(query);\n};\n\n useEffect(() => {\n    const fetchData = async () => {\n      if (!searchQuery) return;\n\n      try {\n        // Step 1: Get Spotify API Token\n        const token = await getSpotifyToken(clientId, clientSecret);\n        // Step 2: Fetch data from Spotify API\n        const fetchedSearchData = await fetchSpotifyData(`/search?q=${searchQuery}&type=track`, token);\n        const fetchedUserData = fetchSpotifyData(`/me/playlists`, token);\n        const tracks = fetchedSearchData.tracks?.items || [];\n        // Step 3: Update state with the fetched data\n        setSearchResults(tracks); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching Spotify data:\", error);\n      }\n    };\n\n    fetchData(); // Call the async function\n  }, [searchQuery]); // \n\n\n  return (\n    <div>\n      <Header/>\n      <div>\n      <Searchbar onSearch={handleSearch} />\n    </div>\n      <div className='wrapper'>\n      <Searchresult tracks={searchResults} />\n      <Playlist />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMgB,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,YAAY,GAAG,kCAAkC;EAEvD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BN,cAAc,CAACM,KAAK,CAAC;EACvB,CAAC;EAEAlB,SAAS,CAAC,MAAM;IACb,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACR,WAAW,EAAE;MAElB,IAAI;QAAA,IAAAS,qBAAA;QACF;QACA,MAAMC,KAAK,GAAG,MAAMpB,eAAe,CAACc,QAAQ,EAAEC,YAAY,CAAC;QAC3D;QACA,MAAMM,iBAAiB,GAAG,MAAMpB,gBAAgB,CAAC,aAAaS,WAAW,aAAa,EAAEU,KAAK,CAAC;QAC9F,MAAME,eAAe,GAAGrB,gBAAgB,CAAC,eAAe,EAAEmB,KAAK,CAAC;QAChE,MAAMG,MAAM,GAAG,EAAAJ,qBAAA,GAAAE,iBAAiB,CAACE,MAAM,cAAAJ,qBAAA,uBAAxBA,qBAAA,CAA0BK,KAAK,KAAI,EAAE;QACpD;QACAX,gBAAgB,CAACU,MAAM,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGnB,oBACEH,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTxB,OAAA;MAAAoB,QAAA,eACApB,OAAA,CAACJ,SAAS;QAAC6B,QAAQ,EAAEhB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACJxB,OAAA;MAAK0B,SAAS,EAAC,SAAS;MAAAN,QAAA,gBACxBpB,OAAA,CAACH,YAAY;QAACmB,MAAM,EAAEX;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCxB,OAAA,CAACF,QAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA5CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}