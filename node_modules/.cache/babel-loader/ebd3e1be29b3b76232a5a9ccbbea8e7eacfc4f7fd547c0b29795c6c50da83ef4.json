{"ast":null,"code":"const Spotify = {\n  accessToken: null,\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  redirectUri: 'https://unrivaled-figolla-2936fd.netlify.app',\n  getAccessToken() {\n    if (this.accessToken) {\n      return this.accessToken;\n    }\n    // Extract the access token from URL\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      this.accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n\n      // Clear access token after expiration\n      window.setTimeout(() => this.accessToken = \"\", expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      return this.accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${this.clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${this.redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n  async savePlaylist(playlistName, trackUris) {\n    if (!playlistName || !trackUris.length) {\n      return;\n    }\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n\n    // Get the user's Spotify ID\n    const response = await fetch(\"https://api.spotify.com/v1/me\", {\n      headers\n    });\n    const userData = await response.json();\n    const userId = userData.id;\n\n    // Create a new playlist\n    const createPlaylistResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: playlistName,\n        description: \"Custom playlist from PlaylistBuddy\"\n      })\n    });\n    const playlistData = await createPlaylistResponse.json();\n    const playlistId = playlistData.id;\n\n    // Add tracks to the playlist\n    fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        uris: trackUris\n      })\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["Spotify","accessToken","clientId","process","env","REACT_APP_CLIENT_ID","redirectUri","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","savePlaylist","playlistName","trackUris","length","headers","Authorization","response","fetch","userData","json","userId","id","createPlaylistResponse","method","body","JSON","stringify","name","description","playlistData","playlistId","uris"],"sources":["/Users/sarah/Documents/Projects/React/playlistBuddy/playlistBuddy/src/components/SaveToSpotify.js"],"sourcesContent":["\n\nconst Spotify = {\n    accessToken: null,\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    redirectUri: 'https://unrivaled-figolla-2936fd.netlify.app',\n  \n    getAccessToken() {\n      if (this.accessToken) {\n        return this.accessToken;\n      }\n      // Extract the access token from URL\n      const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n      const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n  \n      if (accessTokenMatch && expiresInMatch) {\n        this.accessToken = accessTokenMatch[1];\n        const expiresIn = Number(expiresInMatch[1]);\n  \n        // Clear access token after expiration\n        window.setTimeout(() => (this.accessToken = \"\"), expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n        return this.accessToken;\n      } else {\n        const accessUrl = `https://accounts.spotify.com/authorize?client_id=${this.clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${this.redirectUri}`;\n        window.location = accessUrl;\n      }\n    },\n  \n    async savePlaylist(playlistName, trackUris) {\n      if (!playlistName || !trackUris.length) {\n        return;\n      }\n  \n      const accessToken = Spotify.getAccessToken();\n      const headers = { Authorization: `Bearer ${accessToken}` };\n  \n      // Get the user's Spotify ID\n      const response = await fetch(\"https://api.spotify.com/v1/me\", { headers });\n      const userData = await response.json();\n      const userId = userData.id;\n  \n      // Create a new playlist\n      const createPlaylistResponse = await fetch(\n        `https://api.spotify.com/v1/users/${userId}/playlists`,\n        {\n          headers,\n          method: \"POST\",\n          body: JSON.stringify({\n            name: playlistName,\n            description: \"Custom playlist from PlaylistBuddy\",\n          }),\n        }\n      );\n      const playlistData = await createPlaylistResponse.json();\n      const playlistId = playlistData.id;\n  \n      // Add tracks to the playlist\n      fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers,\n        method: \"POST\",\n        body: JSON.stringify({ uris: trackUris }),\n      });\n\n    },\n  };\n\n  \n  export default Spotify;\n  "],"mappings":"AAEA,MAAMA,OAAO,GAAG;EACZC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,mBAAmB;EACzCC,WAAW,EAAE,8CAA8C;EAE3DC,cAAcA,CAAA,EAAG;IACf,IAAI,IAAI,CAACN,WAAW,EAAE;MACpB,OAAO,IAAI,CAACA,WAAW;IACzB;IACA;IACA,MAAMO,gBAAgB,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IAC3E,MAAMC,cAAc,GAAGJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEvE,IAAIJ,gBAAgB,IAAIK,cAAc,EAAE;MACtC,IAAI,CAACZ,WAAW,GAAGO,gBAAgB,CAAC,CAAC,CAAC;MACtC,MAAMM,SAAS,GAAGC,MAAM,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;;MAE3C;MACAJ,MAAM,CAACO,UAAU,CAAC,MAAO,IAAI,CAACf,WAAW,GAAG,EAAG,EAAEa,SAAS,GAAG,IAAI,CAAC;MAClEL,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,GAAG,CAAC;MACnD,OAAO,IAAI,CAACjB,WAAW;IACzB,CAAC,MAAM;MACL,MAAMkB,SAAS,GAAG,oDAAoD,IAAI,CAACjB,QAAQ,kEAAkE,IAAI,CAACI,WAAW,EAAE;MACvKG,MAAM,CAACC,QAAQ,GAAGS,SAAS;IAC7B;EACF,CAAC;EAED,MAAMC,YAAYA,CAACC,YAAY,EAAEC,SAAS,EAAE;IAC1C,IAAI,CAACD,YAAY,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;MACtC;IACF;IAEA,MAAMtB,WAAW,GAAGD,OAAO,CAACO,cAAc,CAAC,CAAC;IAC5C,MAAMiB,OAAO,GAAG;MAAEC,aAAa,EAAE,UAAUxB,WAAW;IAAG,CAAC;;IAE1D;IACA,MAAMyB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAAEH;IAAQ,CAAC,CAAC;IAC1E,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,EAAE;;IAE1B;IACA,MAAMC,sBAAsB,GAAG,MAAML,KAAK,CACxC,oCAAoCG,MAAM,YAAY,EACtD;MACEN,OAAO;MACPS,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEhB,YAAY;QAClBiB,WAAW,EAAE;MACf,CAAC;IACH,CACF,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMP,sBAAsB,CAACH,IAAI,CAAC,CAAC;IACxD,MAAMW,UAAU,GAAGD,YAAY,CAACR,EAAE;;IAElC;IACAJ,KAAK,CAAC,wCAAwCa,UAAU,SAAS,EAAE;MACjEhB,OAAO;MACPS,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEK,IAAI,EAAEnB;MAAU,CAAC;IAC1C,CAAC,CAAC;EAEJ;AACF,CAAC;AAGD,eAAetB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}