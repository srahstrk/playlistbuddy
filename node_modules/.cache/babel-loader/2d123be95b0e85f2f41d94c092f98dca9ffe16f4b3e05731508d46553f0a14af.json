{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/React/jammming/jammming/src/components/Searchresults.js\";\nimport Searchbar from './Searchbar';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"../spotifyAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Searchresults = async () => {\n  const searchEndPoint = 'https://api.spotify.com/v1/search';\n  const searchQuery = 'Civic';\n  const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track`;\n  try {\n    const response = await fetch(urlToFetch);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const songs = jsonResponse.response;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(songs)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = Searchresults;\nexport default Searchresults;\nvar _c;\n$RefreshReg$(_c, \"Searchresults\");","map":{"version":3,"names":["Searchbar","React","useState","useEffect","getSpotifyToken","jsxDEV","_jsxDEV","Searchresults","searchEndPoint","searchQuery","urlToFetch","response","fetch","ok","jsonResponse","json","songs","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","error","console","log","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Projects/React/jammming/jammming/src/components/Searchresults.js"],"sourcesContent":["import Searchbar from './Searchbar';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"../spotifyAuth\";\n\n\n\nconst Searchresults = async () => {    \n const searchEndPoint = 'https://api.spotify.com/v1/search'; \n const searchQuery = 'Civic';\n const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track`; \n try {\n     const response = await fetch(urlToFetch);\n     if (response.ok) {\n       const jsonResponse = await response.json();\n       const songs = jsonResponse.response;\n       return (\n        <div>\n        {JSON.stringify(songs)}\n      </div>\n       )\n     }\n  } catch (error) {\n    console.log(error);\n  }  \n } \n\n\nexport default Searchresults"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,cAAc,GAAG,mCAAmC;EAC1D,MAAMC,WAAW,GAAG,OAAO;EAC3B,MAAMC,UAAU,GAAG,GAAGF,cAAc,MAAMC,WAAW,aAAa;EAClE,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAU,CAAC;IACxC,IAAIC,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1C,MAAMC,KAAK,GAAGF,YAAY,CAACH,QAAQ;MACnC,oBACCL,OAAA;QAAAW,QAAA,EACCC,IAAI,CAACC,SAAS,CAACH,KAAK;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAEP;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACD,CAAC;AAAAG,EAAA,GAlBIpB,aAAa;AAqBnB,eAAeA,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}