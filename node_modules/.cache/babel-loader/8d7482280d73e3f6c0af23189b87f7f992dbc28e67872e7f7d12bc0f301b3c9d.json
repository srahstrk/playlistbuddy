{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/React/jammming/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"../spotifyAuth\";\nimport { fetchSpotifyData } from \"../spotifyApi\";\nimport Header from './components/Header';\nimport Searchbar from './components/Searchbar';\nimport Searchresults from './components/Searchresults';\nimport Playlist from './components/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState();\n  const clientId = \"1840d8c49ff1481c8748e3e4188f320f\";\n  const clientSecret = \"c81dfd43be3746b894a59a9956a1247e\";\n  const searchEndPoint = '/search';\n  const searchQuery = 'Civic';\n  const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track&limit=20`;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _fetchedData$tracks;\n        // Step 1: Get Spotify API Token\n        const token = await getSpotifyToken(clientId, clientSecret);\n        // Step 2: Fetch data from Spotify API\n        const fetchedData = await fetchSpotifyData(urlToFetch, token);\n        const tracks = ((_fetchedData$tracks = fetchedData.tracks) === null || _fetchedData$tracks === void 0 ? void 0 : _fetchedData$tracks.items) || [];\n        // Step 3: Update state with the fetched data\n        setSearchResults(tracks); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching Spotify data:\", error);\n      }\n    };\n    fetchData(); // Call the async function\n  }, []); // \n\n  const [queries, setQueries] = useState();\n  const addQuery = query => {\n    setQueries(queries => [query, ...queries]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Searchresults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GZ4a2ZFfHjeMop40Oq9AsPPSjfs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getSpotifyToken","fetchSpotifyData","Header","Searchbar","Searchresults","Playlist","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","clientId","clientSecret","searchEndPoint","searchQuery","urlToFetch","fetchData","_fetchedData$tracks","token","fetchedData","tracks","items","error","console","queries","setQueries","addQuery","query","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchBar","onSearch","handleSearch","className","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Projects/React/jammming/jammming/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { getSpotifyToken } from \"../spotifyAuth\";\nimport { fetchSpotifyData } from \"../spotifyApi\";\nimport Header from './components/Header';\nimport Searchbar from './components/Searchbar';\nimport Searchresults from './components/Searchresults';\nimport Playlist from './components/Playlist';\n\nfunction App() {\n\nconst [searchResults, setSearchResults] = useState();\nconst clientId = \"1840d8c49ff1481c8748e3e4188f320f\"; \nconst clientSecret = \"c81dfd43be3746b894a59a9956a1247e\"; \n const searchEndPoint = '/search'; \n const searchQuery = 'Civic';\n const urlToFetch = `${searchEndPoint}?q=${searchQuery}&type=track&limit=20`;\n\n useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Step 1: Get Spotify API Token\n        const token = await getSpotifyToken(clientId, clientSecret);\n        // Step 2: Fetch data from Spotify API\n        const fetchedData = await fetchSpotifyData(urlToFetch, token);\n        const tracks = fetchedData.tracks?.items || [];\n        // Step 3: Update state with the fetched data\n        setSearchResults(tracks); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching Spotify data:\", error);\n      }\n    };\n\n    fetchData(); // Call the async function\n  }, []); // \n\n\n\n  const [queries, setQueries] = useState();\n  const addQuery = (query) => {\n    setQueries((queries) => [query, ...queries])\n    };\n  return (\n    <div>\n      <Header/>\n      <div>\n      <SearchBar onSearch={handleSearch} />\n    </div>\n      <div className='wrapper'>\n      <Searchresults />\n      <Playlist />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACpD,MAAMc,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,YAAY,GAAG,kCAAkC;EACtD,MAAMC,cAAc,GAAG,SAAS;EAChC,MAAMC,WAAW,GAAG,OAAO;EAC3B,MAAMC,UAAU,GAAG,GAAGF,cAAc,MAAMC,WAAW,sBAAsB;EAE3EhB,SAAS,CAAC,MAAM;IACb,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAAA,IAAAC,mBAAA;QACF;QACA,MAAMC,KAAK,GAAG,MAAMnB,eAAe,CAACY,QAAQ,EAAEC,YAAY,CAAC;QAC3D;QACA,MAAMO,WAAW,GAAG,MAAMnB,gBAAgB,CAACe,UAAU,EAAEG,KAAK,CAAC;QAC7D,MAAME,MAAM,GAAG,EAAAH,mBAAA,GAAAE,WAAW,CAACC,MAAM,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBI,KAAK,KAAI,EAAE;QAC9C;QACAX,gBAAgB,CAACU,MAAM,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,CAAC;EACxC,MAAM6B,QAAQ,GAAIC,KAAK,IAAK;IAC1BF,UAAU,CAAED,OAAO,IAAK,CAACG,KAAK,EAAE,GAAGH,OAAO,CAAC,CAAC;EAC5C,CAAC;EACH,oBACElB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACL,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT1B,OAAA;MAAAsB,QAAA,eACAtB,OAAA,CAAC2B,SAAS;QAACC,QAAQ,EAAEC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACJ1B,OAAA;MAAK8B,SAAS,EAAC,SAAS;MAAAR,QAAA,gBACxBtB,OAAA,CAACH,aAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjB1B,OAAA,CAACF,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA7CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}