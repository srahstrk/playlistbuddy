{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/React/playlistBuddy/playlistBuddy/src/components/Playlist.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Tracklist from \"./Tracklist\";\nimport Spotify from \"./SaveToSpotify\";\nimport \"../track.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  playlistName,\n  playlistTracks,\n  onNameChange,\n  onRemove,\n  onAdd\n}) {\n  _s();\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleNameChange = e => {\n    onNameChange(e.target.value); // Update playlist name\n  };\n  const handleSavePlaylist = async () => {\n    const success = await Spotify.savePlaylist(playlistName, playlistTracks.map(track => track.uri));\n    if (success) {\n      setSuccessMessage(\"✅ Playlist saved successfully!\");\n    } else {\n      setSuccessMessage(\"❌ Failed to save playlist. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"your-playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create your Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: playlistName,\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tracklist, {\n      tracks: playlistTracks,\n      onRemove: onRemove,\n      isRemoval: true,\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSavePlaylist,\n      className: \"save\",\n      children: \"Save To Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"HXVqXBEXJtgAEhzgpaCzO52c5UE=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["useState","Tracklist","Spotify","jsxDEV","_jsxDEV","Playlist","playlistName","playlistTracks","onNameChange","onRemove","onAdd","_s","successMessage","setSuccessMessage","handleNameChange","e","target","value","handleSavePlaylist","success","savePlaylist","map","track","uri","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","tracks","isRemoval","onClick","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Projects/React/playlistBuddy/playlistBuddy/src/components/Playlist.js"],"sourcesContent":["import { useState } from \"react\";\nimport Tracklist from \"./Tracklist\";\nimport Spotify from \"./SaveToSpotify\";\nimport \"../track.css\";\n\nfunction Playlist({ playlistName, playlistTracks, onNameChange, onRemove, onAdd }) {\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    onNameChange(e.target.value); // Update playlist name\n  };\n\n  const handleSavePlaylist = async () => {\n    \n    const success = await Spotify.savePlaylist(playlistName, playlistTracks.map(track => track.uri));\n    if (success) {\n      setSuccessMessage(\"✅ Playlist saved successfully!\");\n    } else {\n      setSuccessMessage(\"❌ Failed to save playlist. Try again.\");\n    }\n  };\n\n  return (\n    <div className=\"your-playlist\">\n      <h2>Create your Playlist</h2>\n      <input type=\"text\" value={playlistName} onChange={handleNameChange} />\n      <Tracklist tracks={playlistTracks} onRemove={onRemove} isRemoval={true} onAdd={onAdd} />\n      <button onClick={handleSavePlaylist} className=\"save\">Save To Spotify</button>\n      <p className=\"success-message\">{successMessage}</p>\n    </div>\n  );\n}\n\nexport default Playlist;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC9BP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IAErC,MAAMC,OAAO,GAAG,MAAMjB,OAAO,CAACkB,YAAY,CAACd,YAAY,EAAEC,cAAc,CAACc,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,CAAC,CAAC;IAChG,IAAIJ,OAAO,EAAE;MACXN,iBAAiB,CAAC,gCAAgC,CAAC;IACrD,CAAC,MAAM;MACLA,iBAAiB,CAAC,uCAAuC,CAAC;IAC5D;EACF,CAAC;EAED,oBACET,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrB,OAAA;MAAAqB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACb,KAAK,EAAEX,YAAa;MAACyB,QAAQ,EAAEjB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEzB,OAAA,CAACH,SAAS;MAAC+B,MAAM,EAAEzB,cAAe;MAACE,QAAQ,EAAEA,QAAS;MAACwB,SAAS,EAAE,IAAK;MAACvB,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFzB,OAAA;MAAQ8B,OAAO,EAAEhB,kBAAmB;MAACM,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9EzB,OAAA;MAAGoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEb;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAAClB,EAAA,CA1BQN,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}